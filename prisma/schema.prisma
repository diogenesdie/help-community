generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id         BigInt            @id(map: "user_pk")
  username        String            @unique(map: "username_un") @db.VarChar(100)
  password        String            @db.VarChar(200)
  admin           String            @default("0") @db.Char
  status          String            @default("A") @db.Char
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  updated_at      DateTime?         @default(now()) @db.Timestamp(6)
  report          report[]
  report_feedback report_feedback[]

  @@index([username, password])
}

model report {
  report_id       BigInt            @id(map: "reports_pk")
  title           String            @db.VarChar(100)
  body            String
  ups             Int               @default(0)
  downs           Int               @default(0)
  user_id         BigInt?
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  status          String            @default("PENDING") @db.VarChar(20)
  user            user?             @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "reports_users_fk")
  report_feedback report_feedback[]
}

model report_feedback {
  report_feedback_id BigInt   @id(map: "report_feedback_pk")
  type               String   @db.VarChar(4)
  report_id          BigInt
  created_at         DateTime @default(now()) @db.Timestamp(6)
  user_id            BigInt
  report             report   @relation(fields: [report_id], references: [report_id], onDelete: NoAction, onUpdate: NoAction, map: "report_feedback_reportfk")
  user               user     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "report_feedback_user_fk")
}
